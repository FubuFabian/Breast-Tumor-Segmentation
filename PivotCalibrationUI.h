// generated by Fast Light User Interface Designer (fluid) version 1.0300

#ifndef PivotCalibrationUI_h
#define PivotCalibrationUI_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Button.H>
#include <QString>
#include <QFileDialog>
#include <QFile>
#include <QTextStream>
#include <FL/Fl_Input.H>
#include <FL/Fl_Value_Slider.H>
#include <igstkPivotCalibrationFLTKWidget.h>

class PivotCalibration;

class PivotCalibrationUI : public QWidget {
public:
  PivotCalibrationUI();
private:
  Fl_Double_Window *m_mainWindow;
public:
  Fl_Choice *m_comPortChoice;
  static Fl_Menu_Item menu_m_comPortChoice[];
private:
  void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
public:
  Fl_Input *m_SROMFileNameTextField;
private:
  Fl_Button *m_initializeButton;
  void cb_m_initializeButton_i(Fl_Button*, void*);
  static void cb_m_initializeButton(Fl_Button*, void*);
public:
  Fl_Value_Slider *m_delaySlider;
  Fl_Value_Slider *m_numberOfFramesSlider;
  Fl_Choice *m_toolPortChoice;
  static Fl_Menu_Item menu_m_toolPortChoice[];
  Fl_Button *m_saveButton;
private:
  void cb_m_saveButton_i(Fl_Button*, void*);
  static void cb_m_saveButton(Fl_Button*, void*);
public:
  igstk::PivotCalibrationFLTKWidget *m_pivotCalibrationFLTKWidget;
  ~PivotCalibrationUI();
  void SaveCalibration();
  void InitializeTrackingAndCalibration();
  void Show();
  bool HasQuitted();
  void Quit();
private:
  bool hasQuitted; 
public:
  void SetCalibrator(PivotCalibration* calibrator);
  PivotCalibration* pivotCalibration; 
};
#endif
